$PBExportHeader$pf_f_getimagepathappeon.srf
$PBExportComments$Appeon이 클라이언트에서 사용하는 캐쉬용 경로를 구해서 Appeon 이미지파일 경로를 구합니다.
global type pf_f_getimagepathappeon from function_object
end type

forward prototypes
global function string pf_f_getimagepathappeon (string as_filename)
end prototypes

global function string pf_f_getimagepathappeon (string as_filename);if gnv_appmgr.is_clienttype = 'PB' then
	return as_filename
end if

if isnull(as_filename) or as_filename = '' then return as_filename

string	ls_appeonfolder
string ls_filename, ls_url
long ll_lastpos

ls_appeonfolder = appeongetcachedir()
ls_appeonfolder += '\images\'

ll_lastpos = lastpos(as_filename, '\')
if ll_lastpos > 0 then
	ls_filename = mid(as_filename, ll_lastpos + 1)
	ls_filename = ls_appeonfolder + ls_filename
else
	ls_filename = as_filename
end if

//// 파일이 존재하지 않는 경우 직접 다운로드 ===> 이미지 사용시 마다 파일 존재 여부를
//// 확인하는 방식은 속도문제가 발생합니다. 
//// pf_n_appmanager.of_checkimagefiles() 함수에서 다운로드 처리 하세요.
//if not fileexists(ls_filename) then
//	ls_url = appeongetieurl() + "images/" + gnv_extfunc.of_pathstrippath(as_filename)
//	gnv_extfunc.of_urldownloadtofile(ls_url, ls_filename)
//end if

return ls_filename

end function

